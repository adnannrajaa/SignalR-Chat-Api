// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignalRChatApi;

namespace SignalRChatApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201005054842_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SignalRChatApi.Model.ChatMessages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("receiver_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("send_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("sender_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SignalRChatApi.Model.Connection", b =>
                {
                    b.Property<string>("ConnectionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("ConnectionID");

                    b.HasIndex("Userid");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SignalRChatApi.Model.ConversationRoom", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SignalRChatApi.Model.GroupConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<string>("ConnectionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserInRoomid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserInRoomid");

                    b.ToTable("GroupConnections");
                });

            modelBuilder.Entity("SignalRChatApi.Model.RoomChatMessages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("receiver_id")
                        .HasColumnType("int");

                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("send_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("sender_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("GroupChat");
                });

            modelBuilder.Entity("SignalRChatApi.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SignalRChatApi.Model.UserInRoom", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConversationRoomid")
                        .HasColumnType("int");

                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ConversationRoomid");

                    b.ToTable("RoomUsers");
                });

            modelBuilder.Entity("SignalRChatApi.Model.Connection", b =>
                {
                    b.HasOne("SignalRChatApi.Model.User", null)
                        .WithMany("Connections")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("SignalRChatApi.Model.ConversationRoom", b =>
                {
                    b.HasOne("SignalRChatApi.Model.User", null)
                        .WithMany("Rooms")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("SignalRChatApi.Model.GroupConnection", b =>
                {
                    b.HasOne("SignalRChatApi.Model.UserInRoom", null)
                        .WithMany("GroupConnections")
                        .HasForeignKey("UserInRoomid");
                });

            modelBuilder.Entity("SignalRChatApi.Model.UserInRoom", b =>
                {
                    b.HasOne("SignalRChatApi.Model.ConversationRoom", null)
                        .WithMany("UsersInRoom")
                        .HasForeignKey("ConversationRoomid");
                });
#pragma warning restore 612, 618
        }
    }
}
